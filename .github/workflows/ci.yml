name: Deploy to ArgoCD

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

env:
  ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
  ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
  ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set environment
      id: env
      run: |
        if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
          echo "environment=prod" >> $GITHUB_OUTPUT
        else
          echo "environment=dev" >> $GITHUB_OUTPUT
        fi
        
    - name: Generate manifests
      run: |
        # ENVIRONMENT 변수 치환
        sed "s/{{ENVIRONMENT}}/${{ steps.env.outputs.environment }}/g" base/apps/app-of-apps.yaml > overlays/${{ steps.env.outputs.environment }}/app-of-apps-generated.yaml
        
        # 생성된 파일 확인
        cat overlays/${{ steps.env.outputs.environment }}/app-of-apps-generated.yaml
        
    - name: Deploy to ArgoCD
      run: |
        # ArgoCD CLI 설치
        curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
        rm argocd-linux-amd64
        
        # ArgoCD 로그인 (사용자/비밀번호)
        argocd login $ARGOCD_SERVER \
          --username "${{ secrets.ARGOCD_USERNAME }}" \
          --password "${{ secrets.ARGOCD_PASSWORD }}" \
          --insecure --grpc-web
        
        # 애플리케이션 배포
        argocd app sync app-of-apps --prune
        
    - name: Verify deployment
      run: |
        # 배포 상태 확인
        argocd app get app-of-apps --output json | jq '.status.sync.status' 