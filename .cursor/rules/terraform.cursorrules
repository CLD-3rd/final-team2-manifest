# Cursor Rules for ArgoCD Manifest Authoring
rules:
  - "모든 Kubernetes manifest는 YAML 형식으로 작성하고, 들여쓰기는 2 space로 유지한다."
  - "파일 상단에 apiVersion과 kind를 명확히 기재한다."
  - "metadata.name과 metadata.namespace는 항상 포함한다."
  - "리소스 네이밍은 소문자, 하이픈(-)만 사용하며 프로젝트명과 연관성을 가지도록 한다. (예: goteego-argocd-server)"
  - "spec 섹션에 불필요한 필드는 넣지 않고, 실제 배포 환경에 필요한 필드만 작성한다."
  - "여러 리소스를 하나의 YAML에 작성할 경우 '---' 로 구분한다."
  - "가능한 경우 공식 ArgoCD 문서의 stable 버전을 참조하여 apiVersion과 필드를 맞춘다."
  - "ConfigMap, Secret과 같이 민감한 정보는 base64 인코딩 처리하고, 실제 값 대신 placeholder를 사용한다. (예: BASE64_ENCODED_PASSWORD)"
  - "namespace 생성 manifest는 argocd namespace를 먼저 정의하고, 이후 모든 리소스는 해당 namespace에 배포되도록 한다."
  - "설명 주석(#)을 넣어 리소스의 용도를 간단히 설명한다."
  - "작성된 YAML은 kubectl apply --dry-run=client 로 문법 오류가 없는지 검증 가능한 형태여야 한다."
  - "ArgoCD 배포 manifest는 'bootstrap' 레포 또는 'final-team2-manifest' 레포 내에 구성한다."
  - "모든 manifest는 환경(dev, prod)별 Kustomize overlay 구조를 따른다."
  - "Namespace 생성 manifest는 반드시 base/common에 포함시킨다."
  - "ArgoCD 설치는 공식 manifest를 base에 두고, overlay에서 ServiceType, Ingress, RBAC, ConfigMap 등을 환경별로 patch한다."
  - "App-of-Apps 구조에서 ArgoCD를 관리하는 Application 리소스는 apiVersion: argoproj.io/v1alpha1, kind: Application을 사용하며, source.repoURL, targetRevision, path를 명확히 지정한다."
  - "ArgoCD Application 리소스는 project: default, syncPolicy.automated 옵션을 포함하여 자동 동기화를 활성화한다."
  - "Secret, ConfigMap과 같은 민감 정보는 SOPS 또는 External Secrets Operator와 연동하도록 placeholder로 처리한다."
  - "모든 파일은 kubectl kustomize 또는 kubectl apply --dry-run=client로 문법 검사 가능해야 한다."